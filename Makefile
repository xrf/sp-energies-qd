.PHONY: all build clean deploy notes purge regenerate

all: dist/gh-pages/paper.pdf dist/gh-pages/index.html

clean:
	for dir in . Manuscript; do ( cd $${dir} && rm -fr *.aux *.bbl *.blg *.dep *.fdb_latexmk *.fls *.log *.out *Notes.bib; ); done
	rm -fr dist figures.pdf Manuscript/paper.pdf

deploy: dist/gh-pages/.git/config all
	cd dist/gh-pages && \
	git add -A && \
	git commit --amend -q -m Autogenerated && \
	git push -f origin master:gh-pages

notes: dist/gh-pages/figures.pdf

purge:
	rm -fr Datafiles/.cache

regenerate:
	Datafiles/tabulate.py
	Datafiles/plot_grid.py
	Datafiles/plot_compare_rel_slopes.py
	Datafiles/plot_by_num_shells.py
	Datafiles/plot_by_freq.py
	Datafiles/plot_specific_fit.py

dist/gh-pages/.git/config:
	mkdir -p $(@D)
	url=`git remote -v | grep origin | awk '{ printf "%s", $$2; exit }'` && \
	cd $(@D)/.. && \
	git init && \
	git config user.name Bot && \
	git config user.email "<>" && \
	git commit -m _ --allow-empty && \
	git remote add origin "$$url"

dist/gh-pages/figures.pdf: figures.pdf
	mkdir -p $(@D)
	cp figures.pdf $@

dist/gh-pages/index.html:
	mkdir -p $(@D)
	echo '<meta http-equiv="refresh" content="0;url=paper.pdf"/>' >$@

dist/gh-pages/paper.pdf: Manuscript/paper.pdf
	mkdir -p $(@D)
	cp Manuscript/paper.pdf $@

.SUFFIXES: .dep .md .md_dep .pdf .svg .tex

.md.tex:
	pandoc -s -o $@ $<

.svg.pdf:
	inkscape --without-gui --export-pdf=$@ $<

.tex.dep:
	./gen-deps $< $@

.tex.pdf:
	latexmk -g -pdf -interaction=nonstopmode -cd $<

-include Manuscript/paper.dep

has_pandoc!=command -v pandoc 2>/dev/null;
ifdef has_pandoc
-include figures.dep
endif

.SECONDARY:
